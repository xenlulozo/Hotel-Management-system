// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.181.1
//   protoc               v3.20.3
// source: apps/wrapper-controller/src/v1/grpc/protos/payment.proto

/* eslint-disable */
import { Metadata } from '@grpc/grpc-js';
import { GrpcMethod, GrpcStreamMethod } from '@nestjs/microservices';
import { Observable } from 'rxjs';

export const protobufPackage = 'vn.grpc.nodejs.payment.service';

export interface CreateorderDTO {
  id: string;
}

export interface CheckOrderDTO {
  id: string;
}

export interface Empty {}

export interface BaseResponse {
  status: number;
  message: string;
  data: CreateOrderResponse | undefined;
}

export interface CreateOrderResponse {
  checkout_url: string;
}

export const VN_GRPC_NODEJS_PAYMENT_SERVICE_PACKAGE_NAME = 'vn.grpc.nodejs.payment.service';

export interface PaymentServiceClient {
  createOrder(request: CreateorderDTO, metadata?: Metadata): Observable<BaseResponse>;

  checkOrder(request: CheckOrderDTO, metadata?: Metadata): Observable<BaseResponse>;
}

export interface PaymentServiceController {
  createOrder(request: CreateorderDTO, metadata?: Metadata): Promise<BaseResponse> | Observable<BaseResponse> | BaseResponse;

  checkOrder(request: CheckOrderDTO, metadata?: Metadata): Promise<BaseResponse> | Observable<BaseResponse> | BaseResponse;
}

export function PaymentServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ['createOrder', 'checkOrder'];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod('PaymentService', method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod('PaymentService', method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const PAYMENT_SERVICE_NAME = 'PaymentService';
